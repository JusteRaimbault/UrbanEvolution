library(ggplot2)
source(paste0(Sys.getenv("CS_HOME"),'/Organisation/Models/Utils/R/plots.R'))
res2dirpref='CALIBRATION_NOCOUNTRY_GRID_20200423_172109/'
generation='50000'
res <- as.tbl(read.csv(paste0('openmole/calibration/',resdirpref,'/population',generation,'.csv')))
resdirpref='CALIBRATION_GRID_20200305_092250/'
res2dirpref='CALIBRATION_NOCOUNTRY_GRID_20200423_172109/'
generation='50000'
res <- as.tbl(read.csv(paste0('openmole/calibration/',resdirpref,'/population',generation,'.csv')))
resdirpref='CALIBRATION_GRID_20200305_092250/'
res2dirpref='CALIBRATION_NOCOUNTRY_GRID_20200423_172109/'
generation='50000'
res <- as.tbl(read.csv(paste0('openmole/calibration/',resdirpref,'/population',generation,'.csv')))
resdir=paste0('Results/Calibration/',resdirpref,'-',res2dirpref);dir.create(resdir)
objectives = c("mselog","logmse")
parameters = c("gravityDecay","countryGravityDecay","gammaSectors","gammaLinks","gammaOrigin","gammaDestination","finalTime")
res = res[res$evolution.samples>=20,]
res2 = res2[res2$evolution.samples>=20,]
res2 <- as.tbl(read.csv(paste0('openmole/calibration/',res2dirpref,'/population',generation,'.csv')))
res2 = res2[res2$evolution.samples>=20,]
allres = rbind(cbind(res,type=rep('full',nrow(res))),cbind(res2,type=rep('no countries',nrow(res2))))
dim(res)
dim(res2)
allres = rbind(cbind(res,type=rep('full',nrow(res))),cbind(res2,type=rep('no countries',nrow(res2)),countryGravityDecay=rep(0,nrow(res2))))
paramnames = list(gammaOrigin = expression(gamma[F]),
gammaDestination = expression(gamma[T]),
gammaLinks=expression(gamma[W]),
gammaSectors=expression(gamma[S]),
gravityDecay=expression(d[ij]),
countryGravityDecay=expression(g[ij]),
finalTime=expression(t[f])
)
for(param in parameters){
g=ggplot(res,aes_string(x="logmse",y="mselog",color=param,size='evolution.samples'))
g+geom_point(alpha=0.6)+xlab("log(Mean Squared Error)")+ylab("Mean Squared Error on log")+
scale_color_continuous(name=paramnames[[param]])+scale_size_continuous(name='Samples')+stdtheme
ggsave(paste0(resdir,'/pareto_color',param,'.png'),width=20,height=18,units='cm')
}
resdir
resdir=paste0('Results/Calibration/',res2dirpref);dir.create(resdir)
for(param in parameters){
g=ggplot(res,aes_string(x="logmse",y="mselog",color=param,size='evolution.samples',shape='type'))
g+geom_point(alpha=0.6)+xlab("log(Mean Squared Error)")+ylab("Mean Squared Error on log")+
scale_color_continuous(name=paramnames[[param]])+scale_size_continuous(name='Samples')+stdtheme
ggsave(paste0(resdir,'/pareto_color',param,'.png'),width=20,height=18,units='cm')
}
for(param in parameters){
g=ggplot(allres,aes_string(x="logmse",y="mselog",color=param,size='evolution.samples',shape='type'))
g+geom_point(alpha=0.6)+xlab("log(Mean Squared Error)")+ylab("Mean Squared Error on log")+
scale_color_continuous(name=paramnames[[param]])+scale_size_continuous(name='Samples')+stdtheme
ggsave(paste0(resdir,'/pareto_color',param,'.png'),width=20,height=18,units='cm')
}
bres = as.data.frame(res[res$mselog<5.0,])
for(param in parameters){
w = bres$evolution.samples/sum(bres$evolution.samples)
p = sum(bres[,param]*w)
s = sqrt(sum(w*(bres[,param]-p)^2))
show(paste0(param," = ",p,"+-",s))
}
help("rnorm")
1 - sqrt(2)*exp(0.25)+mean(rlnorm(1000,0,sqrt(log(2)+0.5)))
1 - sqrt(2)*exp(0.25)+mean(rlnorm(1000,0,sqrt(log(2)+0.5)))
1 - sqrt(2)*exp(0.25)+mean(rlnorm(1000,0,sqrt(log(2)+0.5)))
1 - sqrt(2)*exp(0.25)+mean(rlnorm(1000,0,sqrt(log(2)+0.5)))
1 - sqrt(2)*exp(0.25)+mean(rlnorm(100000,0,sqrt(log(2)+0.5)))
1 - sqrt(2)*exp(0.25)+mean(rlnorm(100000,0,sqrt(log(2)+0.5)))
1 - sqrt(2)*exp(0.25)+mean(rlnorm(100000,0,sqrt(log(2)+0.5)))
1 - sqrt(2)*exp(0.25)+mean(rlnorm(1000000,0,sqrt(log(2)+0.5)))
hist(1 - sqrt(2)*exp(0.25)+(rlnorm(1000000,0,sqrt(log(2)+0.5)),breaks=50)
hist(1 - sqrt(2)*exp(0.25)+rlnorm(1000000,0,sqrt(log(2)+0.5)),breaks=50)
hist(1 - sqrt(2)*exp(0.25)+rlnorm(1000000,0,sqrt(log(2)+0.5)),breaks=100)
setwd(paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution'))
setwd(paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Models/EvolutionInnovation'))
library(dplyr)
library(ggplot2)
source(paste0(Sys.getenv('CS_HOME'),'/Organisation/Models/Workflow/Utils/R/plots.R'))
source(paste0(Sys.getenv('CS_HOME'),'/Organisation/Models/Utils/R/plots.R'))
setwd(paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Models/EvolutionInnovation'))
library(dplyr)
library(ggplot2)
source(paste0(Sys.getenv('CS_HOME'),'/Organisation/Models/Utils/R/plots.R'))
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/',resprefix,'/');dir.create(resdir)
resprefix = '20200429_150801_STOCHASTICITY_GRID'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resprefix,'.csv')))
names(res)
params<-c("gravityDecay","innovationDecay","mutationRate","newInnovationHierarchy","utilityStd","earlyAdoptersRate","utilityDistribution")
indics<-c("averageDiversity","averageInnovation","averageUtility")
set.seed(0)
res$id = paste0(res$gravityDecay,res$innovationDecay,res$mutationRate,res$newInnovationHierarchy,res$utilityStd,res$earlyAdoptersRate,res$utilityDistribution)
ids = sample(unique(res$id),size = 10,replace = F)
set.seed(0)
res$id = paste0(res$gravityDecay,res$innovationDecay,res$mutationRate,res$newInnovationHierarchy,res$utilityStd,res$earlyAdoptersRate,res$utilityDistribution)
ids = sample(unique(res$id),size = 20,replace = F)
for(indic in indics){
g=ggplot(res[res$id%in%ids,],aes_string(x=indic,color=id,group=id))
g+geom_density()+facet_wrap(~utilityDistribution)
}
g=ggplot(res[res$id%in%ids,],aes_string(x=indic,color="id",group="id"))
g+geom_density()+facet_wrap(~utilityDistribution)
res$id = paste0(res$gravityDecay,res$innovationDecay,res$mutationRate,res$newInnovationHierarchy,res$utilityStd,res$earlyAdoptersRate,res$utilityDistribution)
intid = 1:length(unique(res$id));names(intid)<-unique(res$id)
res$id = intid[res$id]
ids = sample(unique(res$id),size = 20,replace = F)
g=ggplot(res[res$id%in%ids,],aes_string(x=indic,color="id",group="id"))
g+geom_density()+facet_wrap(~utilityDistribution)+scale_color_discrete()
res$id
res$id = paste0(res$gravityDecay,res$innovationDecay,res$mutationRate,res$newInnovationHierarchy,res$utilityStd,res$earlyAdoptersRate,res$utilityDistribution)
intid = 1:length(unique(res$id));names(intid)<-unique(res$id)
res$id = as.character(intid[res$id])
ids = sample(unique(res$id),size = 20,replace = F)
g=ggplot(res[res$id%in%ids,],aes_string(x=indic,color="id",group="id"))
g+geom_density()+facet_wrap(~utilityDistribution)+scale_color_discrete()
resdir
seed=0
set.seed(seed)
res$id = paste0(res$gravityDecay,res$innovationDecay,res$mutationRate,res$newInnovationHierarchy,res$utilityStd,res$earlyAdoptersRate,res$utilityDistribution)
intid = 1:length(unique(res$id));names(intid)<-unique(res$id)
res$id = as.character(intid[res$id])
ids = sample(unique(res$id),size = 20,replace = F)
for(indic in indics){
g=ggplot(res[res$id%in%ids,],aes_string(x=indic,color="id",group="id"))
g+geom_density()+facet_wrap(~utilityDistribution)+scale_color_discrete()+stdtheme
ggsave(file=paste(resdir,indic,'_seed',seed,'.png'),width=20,height=15,units='cm')
}
indics
names(res)
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
seed=0
set.seed(seed)
res$id = paste0(res$gravityDecay,res$innovationDecay,res$mutationRate,res$newInnovationHierarchy,res$utilityStd,res$earlyAdoptersRate,res$utilityDistribution)
intid = 1:length(unique(res$id));names(intid)<-unique(res$id)
res$id = as.character(intid[res$id])
ids = sample(unique(res$id),size = 20,replace = F)
for(indic in indics){
g=ggplot(res[res$id%in%ids,],aes_string(x=indic,color="id",group="id"))
g+geom_density()+facet_wrap(~utilityDistribution)+scale_color_discrete()+stdtheme
ggsave(file=paste(resdir,indic,'_seed',seed,'.png'),width=20,height=15,units='cm')
}
indics<-c("averageDiversity","averageInnovation","averageUtility","finalHierarchy")
seed=0
set.seed(seed)
res$id = paste0(res$gravityDecay,res$innovationDecay,res$mutationRate,res$newInnovationHierarchy,res$utilityStd,res$earlyAdoptersRate,res$utilityDistribution)
intid = 1:length(unique(res$id));names(intid)<-unique(res$id)
res$id = as.character(intid[res$id])
ids = sample(unique(res$id),size = 20,replace = F)
for(indic in indics){
g=ggplot(res[res$id%in%ids,],aes_string(x=indic,color="id",group="id"))
g+geom_density()+facet_wrap(~utilityDistribution)+scale_color_discrete()+stdtheme
ggsave(file=paste(resdir,indic,'_seed',seed,'.png'),width=20,height=15,units='cm')
}
which(is.na(res))
summary(res$averageUtility)
quantile(res$averageUtility,c(0.95))
quantile(res$averageUtility,c(0.95),na.rm = T)
quantile(res$averageUtility,c(0.99),na.rm = T)
res=res[res$averageUtility<quantile(res$averageUtility,c(0.99),na.rm = T)&!is.na(res$averageUtility),]
seed=0
set.seed(seed)
res$id = paste0(res$gravityDecay,res$innovationDecay,res$mutationRate,res$newInnovationHierarchy,res$utilityStd,res$earlyAdoptersRate,res$utilityDistribution)
intid = 1:length(unique(res$id));names(intid)<-unique(res$id)
res$id = as.character(intid[res$id])
ids = sample(unique(res$id),size = 20,replace = F)
for(indic in indics){
g=ggplot(res[res$id%in%ids,],aes_string(x=indic,color="id",group="id"))
g+geom_density()+facet_wrap(~utilityDistribution)+scale_color_discrete()+stdtheme
ggsave(file=paste(resdir,indic,'_seed',seed,'.png'),width=20,height=15,units='cm')
}
seed=42
set.seed(seed)
res$id = paste0(res$gravityDecay,res$innovationDecay,res$mutationRate,res$newInnovationHierarchy,res$utilityStd,res$earlyAdoptersRate,res$utilityDistribution)
intid = 1:length(unique(res$id));names(intid)<-unique(res$id)
res$id = as.character(intid[res$id])
ids = sample(unique(res$id),size = 20,replace = F)
for(indic in indics){
g=ggplot(res[res$id%in%ids,],aes_string(x=indic,color="id",group="id"))
g+geom_density()+facet_wrap(~utilityDistribution)+scale_color_discrete()+stdtheme
ggsave(file=paste(resdir,indic,'_seed',seed,'.png'),width=20,height=15,units='cm')
}
sres = res %>% group_by(id) %>% summarize(
sdAverageDiversity=sd(averageDiversity),meanAverageDiversity=mean(averageDiversity),sharpeAverageDiversity=meanAverageDiversity/sdAverageDiversity,
sdAverageInnovation=sd(averageInnovation),meanAverageInnovation=mean(averageInnovation),sharpeAverageInnovation=meanAverageInnovation/sdAverageInnovation,
sdAverageUtility=sd(averageUtility),meanAverageUtility=mean(averageUtility),sharpeAverageUtility=meanAverageUtility/sdAverageUtility,
sdFinalHierarchy=sd(finalHierarchy),meanFinalHierarchy=mean(finalHierarchy),sharpeFinalHierarchy=meanFinalHierarchy/sdFinalHierarchy
)
summary(sres)
sres = res %>% group_by(id) %>% summarize(
sdAverageDiversity=sd(averageDiversity),meanAverageDiversity=mean(averageDiversity),sharpeAverageDiversity=abs(meanAverageDiversity/sdAverageDiversity),
sdAverageInnovation=sd(averageInnovation),meanAverageInnovation=mean(averageInnovation),sharpeAverageInnovation=abs(meanAverageInnovation/sdAverageInnovation),
sdAverageUtility=sd(averageUtility),meanAverageUtility=mean(averageUtility),sharpeAverageUtility=abs(meanAverageUtility/sdAverageUtility),
sdFinalHierarchy=sd(finalHierarchy),meanFinalHierarchy=mean(finalHierarchy),sharpeFinalHierarchy=abs(meanFinalHierarchy/sdFinalHierarchy)
)
summary(sres)
sres = res %>% group_by(id) %>% summarize(
sdAverageDiversity=sd(averageDiversity),meanAverageDiversity=mean(averageDiversity),medianAverageDiversity=median(averageDiversity),sharpeAverageDiversity=abs(meanAverageDiversity/sdAverageDiversity),
sdAverageInnovation=sd(averageInnovation),meanAverageInnovation=mean(averageInnovation),medianAverageInnovation=median(averageInnovation),sharpeAverageInnovation=abs(meanAverageInnovation/sdAverageInnovation),
sdAverageUtility=sd(averageUtility),meanAverageUtility=mean(averageUtility),medianAverageUtility=median(averageUtility),sharpeAverageUtility=abs(meanAverageUtility/sdAverageUtility),
sdFinalHierarchy=sd(finalHierarchy),meanFinalHierarchy=mean(finalHierarchy),medianFinalHierarchy=median(finalHierarchy),sharpeFinalHierarchy=abs(meanFinalHierarchy/sdFinalHierarchy)
)
summary(sres)
matrix(rep(sres[[indic]],nrow(res)),nrow = nrow(res),byrow = T)
sres[[indic]]
indic="meanAverageDiversity"
sdindic="sdAverageDiversity"
matrix(rep(sres[[indic]],nrow(res)),nrow = nrow(res),byrow = T)
c(2*abs(matrix(rep(sres[[indic]],nrow(res)),nrow = nrow(res),byrow = T) - matrix(rep(sres[[indic]],nrow(res)),nrow = nrow(res),byrow = F))/(matrix(rep(sres[[sdindic]],nrow(res)),nrow = nrow(res),byrow = T) + matrix(rep(sres[[sdindic]],nrow(res)),nrow = nrow(res),byrow = F)))
reldistance <- function(indic,sdindic){
c(2*abs(matrix(rep(sres[[indic]],nrow(res)),nrow = nrow(res),byrow = T) - matrix(rep(sres[[indic]],nrow(res)),nrow = nrow(res),byrow = F))/(matrix(rep(sres[[sdindic]],nrow(res)),nrow = nrow(res),byrow = T) + matrix(rep(sres[[sdindic]],nrow(res)),nrow = nrow(res),byrow = F)))
}
summary(reldistance("meanAverageDiversity","sdAverageDiversity"))
summary(reldistance("medianAverageDiversity","sdAverageDiversity"))
summary(reldistance("meanAverageInnovation","sdAverageInnovation"))
summary(reldistance("medianAverageInnovation","sdAverageInnovation"))
summary(reldistance("meanAverageUtility","sdAverageUtility"))
summary(reldistance("medianAverageUtility","sdAverageUtility"))
summary(reldistance("meanFinalHierarchy","sdFinalHierarchy"))
summary(reldistance("medianFinalHierarchy","sdFinalHierarchy"))
8*8*3*3*3*3*2
3*20/8
summary(sres)
summary(reldistance("meanAverageDiversity","sdAverageDiversity"))
summary(reldistance("meanAverageDiversity","sdAverageDiversity"))
summary(reldistance("medianAverageDiversity","sdAverageDiversity"))
summary(reldistance("meanAverageInnovation","sdAverageInnovation"))
summary(reldistance("medianAverageInnovation","sdAverageInnovation"))
summary(reldistance("meanAverageUtility","sdAverageUtility"))
summary(reldistance("medianAverageUtility","sdAverageUtility"))
summary(reldistance("meanFinalHierarchy","sdFinalHierarchy"))
summary(reldistance("medianFinalHierarchy","sdFinalHierarchy"))
resprefix = '20200429_181134_GRID_GRID'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resprefix,'.csv')))
summary(res)
quantile(res$averageUtility,c(0.99),na.rm = T)
quantile(res$averageUtility,c(0.95),na.rm = T)
res=res[res$averageUtility<quantile(res$averageUtility,c(0.95),na.rm = T)&!is.na(res$averageUtility),]
params
unique(res$mutationRate)
unique(res$utilityStd)
resdir
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(earlyAdoptersRate in unique(res$earlyAdoptersRate)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$earlyAdoptersRate==earlyAdoptersRate&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_point(pch='.')+geom_smooth()+facet_grid(mutationRate~utilityStd)+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-utilityStd_newInnovationHierarchy',newInnovationHierarchy,'_earlyAdoptersRate',earlyAdoptersRate,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
}
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(earlyAdoptersRate in unique(res$earlyAdoptersRate)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$earlyAdoptersRate==earlyAdoptersRate&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_point(pch='.')+geom_smooth()+facet_grid(mutationRate~utilityStd,scales = 'free')+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-utilityStd_newInnovationHierarchy',newInnovationHierarchy,'_earlyAdoptersRate',earlyAdoptersRate,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
}
20*20*2*2*2*2*2
45+1h15+37+38+25+14+30+10+8+21+12+29
45+75+37+38+25+14+30+10+8+21+12+29
5*60
resprefix= '20200429_215249_GRID_GRID'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resprefix,'.csv')))
res=res[res$averageUtility<quantile(res$averageUtility,c(0.95),na.rm = T)&!is.na(res$averageUtility),]
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(earlyAdoptersRate in unique(res$earlyAdoptersRate)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$earlyAdoptersRate==earlyAdoptersRate&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_point(pch='.')+geom_smooth()+facet_grid(mutationRate~utilityStd,scales = 'free')+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-utilityStd_newInnovationHierarchy',newInnovationHierarchy,'_earlyAdoptersRate',earlyAdoptersRate,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
}
2*2*2*20*20
unique(res$utilityStd)
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
paramnames=list(gravityDecay=expression(d[G]),innovationDecay=expression(d[I]),mutationRate=expression(beta),newInnovationHierarchy=expression(alpha[I]),utilityStd=expression(sigma[U]),earlyAdoptersRate=expression(delta[0]),utilityDistribution="Distribution")
indicnames = list(averageDiversity="Diversity",averageInnovation="Innovation",averageUtility="Utility",finalHierarchy="Population hierarchy")
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = T)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="as.character(gravityDecay)",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_boxplot()+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'BOXPLOT-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
g+geom_point(pch='.')+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'POINTS-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
#g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
#         aes_string(x="as.character(gravityDecay)",y=indic,group="innovationDecay",color="innovationDecay")
#)
#g+geom_boxplot()+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
#  xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
#ggsave(filename = paste0(resdir,indic,'BOXPLOT-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
res[,indics]
cor(res[,indics])
resprefix = '20200429_181134_GRID_GRID'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resprefix,'.csv')))
res=res[res$averageUtility<quantile(res$averageUtility,c(0.95),na.rm = T)&!is.na(res$averageUtility),]
res1=res
resprefix= '20200429_215249_GRID_GRID'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resprefix,'.csv')))
res=res[res$averageUtility<quantile(res$averageUtility,c(0.95),na.rm = T)&!is.na(res$averageUtility),]
res2=res
cor(res1[,indics])
cor(res2[,indics])
cor(rbind(res1[,indics],res2[,indics]))
summary(prcomp(rbind(res1[,indics],res2[,indics])))
for(j in 1:ncol(m)){m[,j]=(m[,j]-min(m[,j]))/(max(m[,j])-min(m[,j]))}
m=rbind(res1[,indics],res2[,indics])
for(j in 1:ncol(m)){m[,j]=(m[,j]-min(m[,j]))/(max(m[,j])-min(m[,j]))}
summary(prcomp(m))
cor(rbind(res1[,indics],res2[,indics]))
indicnames
cormat=matrix(0,length(indics),length(indics));cormatmin=cormat=matrix(0,length(indics),length(indics));cormatmax=cormat=matrix(0,length(indics),length(indics))
allres=rbind(res1,res2)
allres=rbind(res1[,indics],res2[,indics])
allres=rbind(res1[,indics],res2[,indics])
cor(res1[,indics])
cor(res2[,indics])
cor(allres)
cormat=matrix(0,length(indics),length(indics));rownames(cormat)=indicnames;colnames(cormat)=indicnames
cormat=matrix(0,length(indics),length(indics));rownames(cormat)=indicnames;colnames(cormat)=indicnames
cormatmin=cormat=matrix(0,length(indics),length(indics));rownames(cormatmin)=indicnames;colnames(cormatmin)=indicnames
cormatmax=cormat=matrix(0,length(indics),length(indics));rownames(cormatmax)=indicnames;colnames(cormatmax)=indicnames
for(i in 1:length(indics)){
for(j in 1:length(indics)){
rho=cor.test(allres[,i],allres[,j])
cormat[i,j]=rho$estimate
}
}
allres[,i]
rho=cor.test(unlist(allres[,i]),unlist(allres[,j]))
rho$estimate
rho$conf.int
cormat=matrix(0,length(indics),length(indics));rownames(cormat)=indicnames;colnames(cormat)=indicnames
cormatmin=cormat=matrix(0,length(indics),length(indics));rownames(cormatmin)=indicnames;colnames(cormatmin)=indicnames
cormatmax=cormat=matrix(0,length(indics),length(indics));rownames(cormatmax)=indicnames;colnames(cormatmax)=indicnames
for(i in 1:length(indics)){
for(j in 1:length(indics)){
rho=cor.test(unlist(allres[,i]),unlist(allres[,j]))
cormat[i,j]=rho$estimate;cormatmin[i,j]=rho$conf.int[1];cormatmax[i,j]=rho$conf.int[2]
}
}
library(corrplot)
corrplot(cormat,lowCI.mat = cormatmin,uppCI.mat = cormatmax)
cormat
rownames(cormat)
indicnames
cormat=matrix(0,length(indics),length(indics));rownames(cormat)=unlist(indicnames);colnames(cormat)=indicnames
rownames(cormat)
cormat=matrix(0,length(indics),length(indics));rownames(cormat)=unlist(indicnames);colnames(cormat)=unlist(indicnames)
cormatmin=cormat=matrix(0,length(indics),length(indics));rownames(cormatmin)=unlist(indicnames);colnames(cormatmin)=unlist(indicnames)
cormatmax=cormat=matrix(0,length(indics),length(indics));rownames(cormatmax)=unlist(indicnames);colnames(cormatmax)=unlist(indicnames)
for(i in 1:length(indics)){
for(j in 1:length(indics)){
rho=cor.test(unlist(allres[,i]),unlist(allres[,j]))
cormat[i,j]=rho$estimate;cormatmin[i,j]=rho$conf.int[1];cormatmax[i,j]=rho$conf.int[2]
}
}
corrplot(cormat,lowCI.mat = cormatmin,uppCI.mat = cormatmax,)
cormat
rownames(cormat)
rownames(cormat)=unlist(indicnames)
rownames(cormat)
rownames(cormat)=unlist(indicnames);colnames(cormat)=unlist(indicnames)
rownames(cormatmin)=unlist(indicnames);colnames(cormatmin)=unlist(indicnames)
rownames(cormatmax)=unlist(indicnames);colnames(cormatmax)=unlist(indicnames)
corrplot(cormat,lowCI.mat = cormatmin,uppCI.mat = cormatmax)
indicnames
cormatnames=c("D","I","U","P")
cormatnames=c("D","I","U","P")
rownames(cormat)=cormatnames;colnames(cormat)=cormatnames
rownames(cormatmin)=cormatnames;colnames(cormatmin)=cormatnames
rownames(cormatmax)=cormatnames;colnames(cormatmax)=cormatnames
corrplot(cormat,lowCI.mat = cormatmin,uppCI.mat = cormatmax)
png(filename = paste0(resdir,'corrmat_indics.png'),width = 20,height = 18,units = 'cm',res = 150)
corrplot(cormat,lowCI.mat = cormatmin,uppCI.mat = cormatmax)
dev.off()
png(filename = paste0(resdir,'corrmat_indics.png'),width = 20,height = 20,units = 'cm',res = 150)
corrplot(cormat,lowCI.mat = cormatmin,uppCI.mat = cormatmax)
dev.off()
png(filename = paste0(resdir,'corrmat_indics.png'),width = 20,height = 20,units = 'cm',res = 150)
corrplot(cormat,lowCI.mat = cormatmin,uppCI.mat = cormatmax,mar = c(-1,-1,0,0))
dev.off()
help(par)
png(filename = paste0(resdir,'corrmat_indics.png'),width = 20,height = 20,units = 'cm',res = 150)
corrplot(cormat,lowCI.mat = cormatmin,uppCI.mat = cormatmax,mar = c(0,0,0,0))
dev.off()
png(filename = paste0(resdir,'corrmat_indics.png'),width = 20,height = 20,units = 'cm',res = 150)
corrplot(cormat,lowCI.mat = cormatmin,uppCI.mat = cormatmax,mar = c(0,0,0,0))
dev.off()
m=rbind(res1[,indics],res2[,indics])
for(j in 1:ncol(m)){m[,j]=(m[,j]-min(m[,j]))/(max(m[,j])-min(m[,j]))}
summary(prcomp(m))
resprefix = 'CALIBRATION_GRID_20200429_220019'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/calibration/',resprefix,'/population9000.csv')))
res
plot(res$oppAverageDiversity,res$oppAverageUtility)
summary(res$evolution.samples)
res = res[res$evolution.samples>20,]
plot(res$oppAverageDiversity,res$oppAverageUtility)
res = res[res$evolution.samples>50,]
plot(res$oppAverageDiversity,res$oppAverageUtility)
res = res[res$evolution.samples>20,]
res <- as.tbl(read.csv(file=paste0('openmole/calibration/',resprefix,'/population9000.csv')))
res = res[res$evolution.samples>20,]
plot(res$oppAverageDiversity,res$oppAverageUtility)
res$averageUtility = - res$oppAverageUtility
res$averageDiversity = - res$oppAverageDiversity
params
for(param in params){
g=ggplot(res,aes_string(x="averageDiversity",y="averageUtility",color=param,size="evolution.samples"))
g+geom_point(alpha=0.6)+xlab("Diversity")+ylab("Utility")+scale_color_continuous(names=paramnames[[param]])+scale_size_continuous(name="Samples")+stdtheme
ggsave(filename = paste0(resdir,"paretoDiversity-Utility_color",param,'.png'),width=20,height=18,units='cm')
}
for(param in params){
g=ggplot(res,aes_string(x="averageDiversity",y="averageUtility",color=param,size="evolution.samples"))
g+geom_point(alpha=0.6)+xlab("Diversity")+ylab("Utility")+scale_color_continuous(name=paramnames[[param]])+scale_size_continuous(name="Samples")+stdtheme
ggsave(filename = paste0(resdir,"paretoDiversity-Utility_color",param,'.png'),width=20,height=18,units='cm')
}
summary(res$utilityDistribution)
help("facet_grid")
10368+12800
1h14+50+28+36+44+2h04
74+50+28+36+44+124

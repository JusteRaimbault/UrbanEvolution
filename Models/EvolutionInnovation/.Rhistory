RMSE
}
CalcRMSE(cdatasub$Total,cdatasub$unconstrainedEst1)
help(dcast)
CalcRMSE <- function(observed,estimated){
res <- (observed - estimated)^2
RMSE <- round(sqrt(mean(res)),3)
RMSE
}
CalcRMSE(cdatasub$Total,cdatasub$unconstrainedEst1)
mu <- 1
alpha <- 1
beta <- -2
k <- 1
T2 <- sum(cdatasub$Total)
vi1_mu <- cdatasub$vi1_origpop^mu
wj2_alpha <- cdatasub$wj2_destsal^alpha
dist_beta <- cdatasub$dist^beta
T1 <- vi1_mu*wj2_alpha*dist_beta
k <- T2/sum(T1)
cdatasub$unconstrainedEst1 <- round(k*vi1_mu*wj2_alpha*dist_beta,0)
CalcRMSE <- function(observed,estimated){
res <- (observed - estimated)^2
RMSE <- round(sqrt(mean(res)),3)
RMSE
}
CalcRMSE(cdatasub$Total,cdatasub$unconstrainedEst1)
CalcRSquared(cdatasub$Total,cdatasub$unconstrainedEst1)
R2
CalcRSquared <- function(observed,estimated){
r <- cor(observed,estimated)
R2 <- r^2
R2
}
CalcRSquared(cdatasub$Total,cdatasub$unconstrainedEst1)
CalcRMSE <- function(observed,estimated){
res <- (observed - estimated)^2
RMSE <- round(sqrt(mean(res)),3)
RMSE
}
CalcRMSE(cdatasub$Total,cdatasub$unconstrainedEst1)
uncosim <- glm(Total ~ log(vi1_origpop)+log(wj2_destsal)+log(dist), na.action = na.exclude, family = poisson(link = "log"), data = cdatasub)
k <- uncosim$coefficients[1]
mu <- uncosim$coefficients[2]
alpha <- uncosim$coefficients[3]
beta <- -uncosim$coefficients[4]
cdatasub$unconstrainedEst2 <- exp(k+(mu*log(cdatasub$vi1_origpop))+(alpha*log(cdatasub$wj2_destsal))-(beta*log(cdatasub$dist)))
cdatasub$unconstrainedEst2 <- (exp(k)*exp(mu*log(cdatasub$vi1_origpop))*exp(alpha*log(cdatasub$wj2_destsal))*exp(-beta*log(cdatasub$dist)))
cdatasub$fitted <- fitted(uncosim)
cdatasub$unconstrainedEst2 <- round(cdatasub$unconstrainedEst2,0)
cdatasubmat <- dcast(cdatasub, Orig ~ Dest, sum, value.var = "Total", margins=c("Orig", "Dest"))
prodSim <- glm(Total ~ OrigCodeNew+log(DestPop)+log(dist)-1, na.action = na.exclude, family = poisson(link = "log"), data = cdatasub)
prodSim <- glm(Total ~ OrigCodeNew+log(wj2_destsal)+log(dist)-1, na.action = na.exclude, family = poisson(link = "log"), data = cdatasub)
summary(prodSim)
O_i <- cdatasub %>% group_by(OrigCodeNew) %>% summarise(O_i = sum(Total))
cdatasub$O_i <- O_i$O_i[match(cdatasub$OrigCodeNew,O_i$OrigCodeNew)]
D_j <- cdatasub %>% group_by(DestCodeNew) %>% summarise(D_j = sum(Total))
cdatasub$D_j <- D_j$D_j[match(cdatasub$DestCodeNew,D_j$DestCodeNew)]
prodSim_out <- tidy(prodSim)
prodSim_out
coefs <- as.data.frame(prodSim$coefficients)
cdatasub$mu_i <- coefs$`prodSim$coefficients`[match(cdatasub$OrigCodeNew,sub(".*OrigCodeNew","", rownames(coefs)))]
head(cdatasub)
mu_i <- prodSim$coefficients[1:7]
alpha <- prodSim$coefficients[8]
beta <- prodSim$coefficients[9]
cdatasub$prodsimest1 <- exp((cdatasub$mu_i)+(alpha*log(cdatasub$DestPop))+(beta*log(cdatasub$dist)))
mu_i <- prodSim$coefficients[1:7]
alpha <- prodSim$coefficients[8]
beta <- prodSim$coefficients[9]
cdatasub$prodsimest1 <- exp((cdatasub$mu_i)+(alpha*log(cdatasub$wj2_destsal))+(beta*log(cdatasub$dist)))
cdatasub$prodsimFitted <- fitted(prodSim)
cdatasub$prodsimFitted <- round(fitted(prodSim),0)
cdatasubmat3 <- dcast(cdatasub, Orig ~ Dest, sum, value.var = "prodsimFitted", margins=c("Orig", "Dest"))
cdatasubmat3
CalcRSquared(cdatasub$Total,cdatasub$prodsimFitted)
CalcRMSE(cdatasub$Total,cdatasub$prodsimFitted)
cdatasub$wj3_destsalScenario <- cdatasub$wj2_destsal
cdatasub$wj3_destsalScenario <- ifelse(cdatasub$wj3_destsalScenario == 16200,25000,cdatasub$wj3_destsalScenario)
cdatasub$prodsimest2 <- exp((cdatasub$mu_i)+(alpha*log(cdatasub$wj3_destsalScenario))+(beta*log(cdatasub$dist)))
cdatasub$prodsimest2 <- round(cdatasub$prodsimest2,0)
cdatasubmat4 <- dcast(cdatasub, Orig ~ Dest, sum, value.var = "prodsimest2", margins=c("Orig", "Dest"))
cdatasubmat4
cdatasub
cdatasubmat4
cdatasub$prodsimest2 <- exp((cdatasub$mu_i)+(alpha*log(cdatasub$wj3_destsalScenario))+(beta*log(cdatasub$dist)))
cdatasub$prodsimest2 <- round(cdatasub$prodsimest2,0)
cdatasubmat4 <- dcast(cdatasub, Orig ~ Dest, sum, value.var = "prodsimest2", margins=c("Orig", "Dest"))
cdatasubmat4
setwd(paste0(Sys.getenv("CS_HOME"),'/UrbanDynamics/Models/ABMCitiesFirms'))
Sys.getenv("CS_HOME")
library(hypervolume)
install.packages('hypervolume')
library(hypervolume)
help("hypervolume")
library(sp)
coords = matrix(runif(200),ncol = 2)
coords
d <- dist(coords)
d
dim(d)
d <- spDist(coords)
d <- spDists(coords)
dim(d)
d
min(d)
N = 100
coords = matrix(runif(2*N),ncol = 2)
d <- spDists(coords)
ai = runif(N,0,1000)
ej = runif(N,0,1000)
kij = matrix(rep(ai,N),byrow = T) +  matrix(rep(ej,N),byrow = F)
dij <- spDists(coords)
f <- function(x){sum(kij*dij*exp(-x*dij))/sum(kij*exp(-x*dij))}
f(0)
kij = matrix(rep(ai,N),nrows=N,byrow = T) +  matrix(rep(ej,N),nrows=N,byrow = F)
kij = matrix(rep(ai,N),nrow=N,byrow = T) +  matrix(rep(ej,N),nrow=N,byrow = F)
f <- function(x){sum(kij*dij*exp(-x*dij))/sum(kij*exp(-x*dij))}
f(0)
f(10000)
min(dij)
min(dij[dij>0])
f(-10000)
f(-100)
f(-10)
max(dij)
help(deriv)
help(diff)
sapply(seq(0,10,0.01),f)
plot(sapply(seq(0,10,0.01),f),type='l')
plot(sapply(seq(0,100,0.01),f),type='l')
fp = diff(sapply(seq(0,100,0.01),f))/0.01
max(fp)
dx = 0.01
seq(0,100,dx)
f(dx)-f(0)
(f(dx)-f(0))/dx
fp = diff(sapply(seq(0,100,dx),f))/0.01
max(abs(fp))
coords = matrix(runif(2*N,0,1000),ncol = 2)
dij <- spDists(coords)
ai = runif(N,0,1000)
ej = runif(N,0,1000)
kij = matrix(rep(ai,N),nrow=N,byrow = T) +  matrix(rep(ej,N),nrow=N,byrow = F)
f <- function(x){sum(kij*dij*exp(-x*dij))/sum(kij*exp(-x*dij))}
dx = 0.01
plot(sapply(seq(0,100,dx),f),type='l')
fp = diff(sapply(seq(0,100,dx),f))/0.01
max(abs(fp))
help(solve)
help(minimize)
??newClassRepresentation
help(optim)
g<- function(x){f(x)-100}
optim(10,g)
optimize(10,g)
help(optimize)
optimize(g,c(0,1000))
g<- function(x){abs(f(x)-100)}
optimize(g,c(0,1000))
plot(sapply(seq(0,100,dx),f),type='l')
optimize(g,c(0,0.1))
1
g<- function(x){abs(f(x)-100)}
optimize(g,c(0,0.01))
g<- function(x){abs(f(x)-100)}
optimize(g,c(0,1))
optimize(g,c(0,1))
optimize(g,c(0,2))
optimize(g,c(0,2))$minimum
xstar = optimize(g,c(0,2))$minimum
dx = 0.0001
dx = 0.0001
(f(xstar+dx) - f(xstar))/dx
l = 100
l = 100
g<- function(x){abs(f(x)-l)}
xstar = optimize(g,c(0,2))$minimum
dx = 0.0001
1 - xstar*((f(xstar+dx) - f(xstar))/dx)/l
coords = matrix(runif(2*N,0,100),ncol = 2)
dij <- spDists(coords)
ai = runif(N,0,1000)
ej = runif(N,0,1000)
kij = matrix(rep(ai,N),nrow=N,byrow = T) +  matrix(rep(ej,N),nrow=N,byrow = F)
f <- function(x){sum(kij*dij*exp(-x*dij))/sum(kij*exp(-x*dij))}
dx = 0.01
fp = diff(sapply(seq(0,100,dx),f))/0.01
max(abs(fp))
l = 10
g<- function(x){abs(f(x)-l)}
xstar = optimize(g,c(0,2))$minimum
dx = 0.0001
1 - xstar*((f(xstar+dx) - f(xstar))/dx)/l
dij = read.csv(file = paste0(Sys.getenv('CS_HOME'),'/UrbanDynamics/Data/QUANT/converted/dis_roads_min.csv'))
dij = read.csv(file = paste0(Sys.getenv('CS_HOME'),'/UrbanDynamics/Data/QUANT/converted/dis_roads_min.csv'),header=F,skip = 1)
dim(dij)
Tijsparse = read.csv(file = paste0(Sys.getenv('CS_HOME'),'/UrbanDynamics/Data/QUANT/converted/TObs_1.csv'),header=F,skip = 1)
library(Matrix)
library(Matrix)
dij=Matrix(dij)
help(Matrix)
dij=Matrix(as.matrix(dij))
dim(dij)
Tij = sparseMatrix(i=Tijsparse$V1,j=Tijsparse$V2,x=Tijsparse$V3)
Tij = sparseMatrix(i=Tijsparse$V1,j=Tijsparse$V2,x=Tijsparse$V3,dims=dim(dij))
max(Tijsparse$V1)
macx(Tijsparse$V2)
max(Tijsparse$V2)
dim(dij)
Tij = sparseMatrix(i=Tijsparse$V1,j=Tijsparse$V2,x=Tijsparse$V3,dims=c(8436,8436))
Tijsparse$V1
summary(Tijsparse$V1)
summary(Tijsparse$V2)
summary(Tijsparse$V3)
Tij = sparseMatrix(i=Tijsparse$V1,j=Tijsparse$V2,x=Tijsparse$V3,dims=c(9000,9000))
Tij = sparseMatrix(i=Tijsparse$V1,j=Tijsparse$V2,x=Tijsparse$V3,dims=dim(dij),index1 = F)
Tij
dbar = sum(dij*Tij)/sum(Tij)
dbar
ki = rowSums(Tij)
ki
ki = rep(rowSums(Tij),nrow(Tij))
ki
kij = Matrix(matrix(rep(rowSums(Tij),nrow(Tij)),nrow = nrow(Tij),byrow = T) + matrix(rep(colSums(Tij),nrow(Tij)),nrow = nrow(Tij),byrow = F))
f <- function(x){sum(kij*dij*exp(-x*dij))/sum(kij*exp(-x*dij))}
g <- function(x){x*f(x)/dbar}
xstar=1
for(k in 1:10){
xstar = g(xstar)
show(xstar)
}
dx = 0.0001
(g(xstar+dx)-g(xstar))/dx
gp <- function(x){(g(x+dx)-g(x))/dx}
gp(1)
gp(0)
gp(g(1))
plot(xvals,sapply(g,xvals),type='l');points(xvals,xvals,col='red',type='l',add=T)
xvals = seq(0.025,0.035,0.001)
plot(xvals,sapply(g,xvals),type='l');points(xvals,xvals,col='red',type='l',add=T)
plot(xvals,sapply(xvals,g),type='l');points(xvals,xvals,col='red',type='l',add=T)
g(0)
help("read.table")
help("list.dirs")
help(write.table)
setwd(paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Models/EvolutionInnovation'))
library(dplyr)
library(ggplot2)
source(paste0(Sys.getenv('CS_HOME'),'/Organisation/Models/Utils/R/plots.R'))
params<-c("gravityDecay","innovationDecay","mutationRate","newInnovationHierarchy","utilityStd","earlyAdoptersRate","utilityDistribution")#,"initialHierarchy")
paramnames=list(gravityDecay=expression(d[G]),innovationDecay=expression(d[I]),mutationRate=expression(beta),newInnovationHierarchy=expression(alpha[I]),utilityStd=expression(sigma[U]),earlyAdoptersRate=expression(delta[0]),utilityDistribution="Distribution")
indics<-c("averageDiversity","averageInnovation","averageUtility","finalHierarchy")
indicnames = list(averageDiversity="Diversity",averageInnovation="Innovation",averageUtility="Utility",finalHierarchy="Population hierarchy")
resprefix = '20200429_181134_GRID_GRID'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resprefix,'.csv')))
res=res[res$averageUtility<quantile(res$averageUtility,c(0.95),na.rm = T)&!is.na(res$averageUtility),]
res1=res
resprefix= '20200429_215249_GRID_GRID'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resprefix,'.csv')))
res=res[res$averageUtility<quantile(res$averageUtility,c(0.95),na.rm = T)&!is.na(res$averageUtility),]
res2=res
indic=indics[1]
unique(res$utilityDistribution)
distrib=unique(res$utilityDistribution)[1]
distrib
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
unique(res$newInnovationHierarchy)
newInnovationHierarchy=1
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
distrib
resdir
unique(res$utilityDistribution)
res$mutationRate
res$mutationRateF = paste0("beta = ",res$mutationRate)
res$earlyAdoptersRateF = paste0("r[0] = ",res$earlyAdoptersRate)
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRateF~earlyAdoptersRateF,scales = 'free', labeller =label_parsed)+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
g+geom_smooth(se = F)+facet_grid(mutationRateF~earlyAdoptersRateF,scales = 'free', labeller =label_parsed)+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
res$mutationRateF = paste0('beta *"="*',res$mutationRate)
res$earlyAdoptersRateF = paste0('r[0]*"="*',res$earlyAdoptersRate)
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRateF~earlyAdoptersRateF,scales = 'free', labeller =label_parsed)+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
resprefix = 'CALIBRATION_GRID_20200618_103726'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
resprefix = 'CALIBRATION_GRID_20200618_103726';finalgen='21000'
res <- as.tbl(read.csv(file=paste0('openmole/calibration/',resprefix,'/population',finalgen,'.csv')))
res = res[res$evolution.samples>20,]
res$averageUtility = - res$oppAverageUtility
res$averageDiversity = - res$oppAverageDiversity
params
for(param in params){
g=ggplot(res,aes_string(x="averageDiversity",y="averageUtility",color=param,size="evolution.samples"))
g+geom_point(alpha=0.6)+xlab("Diversity")+ylab("Utility")+scale_color_continuous(name=paramnames[[param]])+scale_size_continuous(name="Samples")+stdtheme
ggsave(filename = paste0(resdir,"paretoDiversity-Utility_color",param,'.png'),width=20,height=18,units='cm')
}
resprefix = 'CALIBRATION_GRID_20200618_103726';finalgen='23000'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/calibration/',resprefix,'/population',finalgen,'.csv')))
res = res[res$evolution.samples>20,]
res$averageUtility = - res$oppAverageUtility
res$averageDiversity = - res$oppAverageDiversity
for(param in params){
g=ggplot(res,aes_string(x="averageDiversity",y="averageUtility",color=param,size="evolution.samples"))
g+geom_point(alpha=0.6)+xlab("Diversity")+ylab("Utility")+scale_color_continuous(name=paramnames[[param]])+scale_size_continuous(name="Samples")+stdtheme
ggsave(filename = paste0(resdir,"paretoDiversity-Utility_color",param,'.png'),width=20,height=18,units='cm')
}
resprefix = 'CALIBRATION_GRID_20200618_103726';finalgen='27000'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/calibration/',resprefix,'/population',finalgen,'.csv')))
res = res[res$evolution.samples>20,]
res$averageUtility = - res$oppAverageUtility
res$averageDiversity = - res$oppAverageDiversity
for(param in params){
g=ggplot(res,aes_string(x="averageDiversity",y="averageUtility",color=param,size="evolution.samples"))
g+geom_point(alpha=0.6)+xlab("Diversity")+ylab("Utility")+scale_color_continuous(name=paramnames[[param]])+scale_size_continuous(name="Samples")+stdtheme
ggsave(filename = paste0(resdir,"paretoDiversity-Utility_color",param,'.png'),width=20,height=18,units='cm')
}
resprefix= '20200619_GRID_GRID'
resfiles=c('20200618_140526_GRID_GRID','20200618_164030_GRID_GRID','20200618_190830_GRID_GRID','20200618_213402_GRID_GRID',
'20200619_001006_GRID_GRID','20200619_025115_GRID_GRID','20200619_052000_GRID_GRID','20200619_084724_GRID_GRID',
'20200619_112519_GRID_GRID','20200429_215249_GRID_GRID')
resprefix= '20200619_GRID_GRID'
resfiles=c('20200618_140526_GRID_GRID','20200618_164030_GRID_GRID','20200618_190830_GRID_GRID','20200618_213402_GRID_GRID',
'20200619_001006_GRID_GRID','20200619_025115_GRID_GRID','20200619_052000_GRID_GRID','20200619_084724_GRID_GRID',
'20200619_112519_GRID_GRID','20200429_215249_GRID_GRID')
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resfiles[1],'.csv')))
for(resfile in resfiles[2:length(resfiles)]){
res <- rbind(res,as.tbl(read.csv(file=paste0('openmole/exploration/',resfile,'.csv'))))
}
resfile
tmp=as.tbl(read.csv(file=paste0('openmole/exploration/',resfile,'.csv')))
tmp
res
resfiles=c('20200429_215249_GRID_GRID','20200618_140526_GRID_GRID','20200618_164030_GRID_GRID','20200618_190830_GRID_GRID','20200618_213402_GRID_GRID',
'20200619_001006_GRID_GRID','20200619_025115_GRID_GRID','20200619_052000_GRID_GRID','20200619_084724_GRID_GRID',
'20200619_112519_GRID_GRID')
resfiles=c('20200429_215249_GRID_GRID','20200618_140526_GRID_GRID','20200618_164030_GRID_GRID','20200618_190830_GRID_GRID','20200618_213402_GRID_GRID',
'20200619_001006_GRID_GRID','20200619_025115_GRID_GRID','20200619_052000_GRID_GRID','20200619_084724_GRID_GRID',
'20200619_112519_GRID_GRID')
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resfiles[1],'.csv')))
if(is.null(res[['initialHierarchy']])){res[['initialHierarchy']]=rep(1,nrow(res))}
for(resfile in resfiles[2:length(resfiles)]){
res <- rbind(res,as.tbl(read.csv(file=paste0('openmole/exploration/',resfile,'.csv'))))
}
dim(res)
names(res)
length(unique(res$id))
res=res[res$averageUtility<quantile(res$averageUtility,c(0.95),na.rm = T)&!is.na(res$averageUtility),]
res2=res
res$mutationRateF = paste0('beta *"="*',res$mutationRate)
res$earlyAdoptersRateF = paste0('r[0]*"="*',res$earlyAdoptersRate)
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRateF~earlyAdoptersRateF,scales = 'free', labeller =label_parsed)+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
#g+geom_point(pch='.')+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
#  xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
#ggsave(filename = paste0(resdir,indic,'POINTS-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
#g+geom_boxplot()+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
#  xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
#ggsave(filename = paste0(resdir,indic,'BOXPLOT-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
unique(res$newInnovationHierarchy)
res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,]
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resfiles[1],'.csv')))
if(is.null(res[['initialHierarchy']])){res[['initialHierarchy']]=rep(1,nrow(res))}
for(resfile in resfiles[2:length(resfiles)]){
res <- rbind(res,as.tbl(read.csv(file=paste0('openmole/exploration/',resfile,'.csv'))))
}
#res=res[res$averageUtility<quantile(res$averageUtility,c(0.95),na.rm = T)&!is.na(res$averageUtility),]
res2=res
res$mutationRateF = paste0('beta *"="*',res$mutationRate)
res$earlyAdoptersRateF = paste0('r[0]*"="*',res$earlyAdoptersRate)
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRateF~earlyAdoptersRateF,scales = 'free', labeller =label_parsed)+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
#g+geom_point(pch='.')+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
#  xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
#ggsave(filename = paste0(resdir,indic,'POINTS-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
#g+geom_boxplot()+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
#  xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
#ggsave(filename = paste0(resdir,indic,'BOXPLOT-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy,]
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resfiles[1],'.csv')))
unique(res$newInnovationHierarchy)
unique(res$utilityDistribution)
unique(res$newInnovationHierarchy)
resprefix= '20200619_GRID_GRID'
resfiles=c(#'20200429_215249_GRID_GRID',
'20200618_140526_GRID_GRID','20200618_164030_GRID_GRID','20200618_190830_GRID_GRID','20200618_213402_GRID_GRID',
'20200619_001006_GRID_GRID','20200619_025115_GRID_GRID','20200619_052000_GRID_GRID','20200619_084724_GRID_GRID',
'20200619_112519_GRID_GRID')
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resfiles[1],'.csv')))
if(is.null(res[['initialHierarchy']])){res[['initialHierarchy']]=rep(1,nrow(res))}
for(resfile in resfiles[2:length(resfiles)]){
res <- rbind(res,as.tbl(read.csv(file=paste0('openmole/exploration/',resfile,'.csv'))))
}
resprefix= '20200619_GRID_GRID'
resfiles=c('20200618_140526_GRID_GRID','20200618_164030_GRID_GRID','20200618_190830_GRID_GRID','20200618_213402_GRID_GRID',
'20200619_001006_GRID_GRID','20200619_025115_GRID_GRID','20200619_052000_GRID_GRID','20200619_084724_GRID_GRID',
'20200619_112519_GRID_GRID','20200619_140601_GRID_GRID')
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resfiles[1],'.csv')))
if(is.null(res[['initialHierarchy']])){res[['initialHierarchy']]=rep(1,nrow(res))}
for(resfile in resfiles[2:length(resfiles)]){
res <- rbind(res,as.tbl(read.csv(file=paste0('openmole/exploration/',resfile,'.csv'))))
}
res=res[res$averageUtility<quantile(res$averageUtility,c(0.95),na.rm = T)&!is.na(res$averageUtility),]
res2=res
res$mutationRateF = paste0('beta *"="*',res$mutationRate)
res$earlyAdoptersRateF = paste0('r[0]*"="*',res$earlyAdoptersRate)
unique(res$newInnovationHierarchy)
res
unique(res$utilityStd)
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
for(utilityStd in unique(res$utilityStd)){
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy&res$utilityStd==utilityStd,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRateF~earlyAdoptersRateF,scales = 'free', labeller =label_parsed)+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_utilityStd',utilityStd,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
#g+geom_point(pch='.')+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
#  xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
#ggsave(filename = paste0(resdir,indic,'POINTS-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
#g+geom_boxplot()+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
#  xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
#ggsave(filename = paste0(resdir,indic,'BOXPLOT-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
}
resprefix = 'CALIBRATION_GRID_20200618_103726';finalgen='50000'
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/calibration/',resprefix,'/population',finalgen,'.csv')))
res = res[res$evolution.samples>20,]
res$averageUtility = - res$oppAverageUtility
res$averageDiversity = - res$oppAverageDiversity
for(param in params){
g=ggplot(res,aes_string(x="averageDiversity",y="averageUtility",color=param,size="evolution.samples"))
g+geom_point(alpha=0.6)+xlab("Diversity")+ylab("Utility")+scale_color_continuous(name=paramnames[[param]])+scale_size_continuous(name="Samples")+stdtheme
ggsave(filename = paste0(resdir,"paretoDiversity-Utility_color",param,'.png'),width=20,height=18,units='cm')
}
resprefix= '20200429_215249_GRID_GRID'
resfiles=c('20200429_215249_GRID_GRID')
resdir = paste0(Sys.getenv('CS_HOME'),'/UrbanEvolution/Results/EvolutionInnovation/',resprefix,'/');dir.create(resdir)
res <- as.tbl(read.csv(file=paste0('openmole/exploration/',resfiles[1],'.csv')))
if(is.null(res[['initialHierarchy']])){res[['initialHierarchy']]=rep(1,nrow(res))}
for(resfile in resfiles[2:length(resfiles)]){
res <- rbind(res,as.tbl(read.csv(file=paste0('openmole/exploration/',resfile,'.csv'))))
}
res=res[res$averageUtility<quantile(res$averageUtility,c(0.95),na.rm = T)&!is.na(res$averageUtility),]
res2=res
res$mutationRateF = paste0('beta *"="*',res$mutationRate)
res$earlyAdoptersRateF = paste0('r[0]*"="*',res$earlyAdoptersRate)
for(indic in indics){
for(distrib in unique(res$utilityDistribution)){
for(newInnovationHierarchy in unique(res$newInnovationHierarchy)){
for(utilityStd in unique(res$utilityStd)){
g=ggplot(res[res$utilityDistribution==distrib&res$newInnovationHierarchy==newInnovationHierarchy&res$utilityStd==utilityStd,],
aes_string(x="gravityDecay",y=indic,group="innovationDecay",color="innovationDecay")
)
g+geom_smooth(se = F)+facet_grid(mutationRateF~earlyAdoptersRateF,scales = 'free', labeller =label_parsed)+
xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
ggsave(filename = paste0(resdir,indic,'-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_utilityStd',utilityStd,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
#g+geom_point(pch='.')+geom_smooth(se = F)+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
#  xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
#ggsave(filename = paste0(resdir,indic,'POINTS-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
#g+geom_boxplot()+facet_grid(mutationRate~earlyAdoptersRate,scales = 'free')+
#  xlab(expression(d[G]))+ylab(indicnames[[indic]])+scale_color_continuous(name=expression(d[I]))+stdtheme
#ggsave(filename = paste0(resdir,indic,'BOXPLOT-gravityDecay_color-innovationDecay_facet-mutationRate-earlyAdoptersRate_newInnovationHierarchy',newInnovationHierarchy,'_distrib',distrib,'.png'),width=30,height=20,units='cm')
}
}
}
}
